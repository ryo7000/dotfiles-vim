[[plugins]]
repo = 'vim-jp/vimdoc-ja'
type__depth = 1

[[plugins]]
repo = 'kana/vim-fakeclip'
rev  = '0.3.0'

[[plugins]]
repo = 'will133/vim-dirdiff'

[[plugins]]
repo = 'cespare/vim-toml'

[[plugins]]
repo = 'Shougo/unite.vim'

[[plugins]]
repo = 'Shougo/denite.nvim'

[[plugins]]
repo = 'Shougo/neosnippet'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'Shougo/vimfiler'

[[plugins]]
repo    = 'Shougo/unite-outline'
depends = 'Shougo/unite.vim'

[[plugins]]
repo    = 'Shougo/neomru.vim'
depends = 'Shougo/unite.vim'

[[plugins]]
repo = 'thinca/vim-ref'

[[plugins]]
repo  = 'w0rp/ale'
rev  = 'v2.3.0'

[[plugins]]
repo = 'itchyny/lightline.vim'

[[plugins]]
repo    = 'maximbaz/lightline-ale'
depends = ['w0rp/ale', 'itchyny/lightline.vim']

[[plugins]]
repo = 'majutsushi/tagbar'
rev  = 'v2.6.1'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'vim-scripts/vcscommand.vim'

[[plugins]]
repo = 'thinca/vim-quickrun'

[[plugins]]
repo = 'leafgarland/typescript-vim'

#[[plugins]]
#repo = 'othree/eregex.vim'

[[plugins]]
repo = 'qpkorr/vim-renamer'

[[plugins]]
repo = 'vim-scripts/Align'

[[plugins]]
repo = 'plasticboy/vim-markdown'

[[plugins]]
repo = 'kannokanno/previm'

[[plugins]]
repo = 'tyru/open-browser.vim'

[[plugins]]
repo = 'ntpeters/vim-better-whitespace'

[[plugins]]
repo = 'Shougo/vimproc.vim'
rev  = 'ver.9.3'
hook_post_update = '''
  let cmd = ''
  if executable('make')
    let cmd = 'make'
  endif
  let g:dein#plugin.build = cmd
'''

[[plugins]]
repo = 'nixprime/cpsm'
hook_post_update = '''
  let cmd = ''
  if executable('make')
    let cmd = 'sh -c "PY3=ON ./install.sh"'
  endif
  let g:dein#plugin.build = cmd
'''

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

# Android
[[plugins]]
repo  = 'thinca/vim-logcat'

# Colorscheme
[[plugins]]
repo = 'jonathanfilip/vim-lucius'

[[plugins]]
repo='prabirshrestha/async.vim'

[[plugins]]
repo='prabirshrestha/vim-lsp'
hook_add='''
if executable('typescript-language-server')
    au User lsp_setup call lsp#register_server({
        \ 'name': 'javascript-typescript-langserver',
        \ 'cmd': {server_info->[&shell, &shellcmdflag, 'typescript-language-server --stdio']},
        \ 'whitelist': ['typescript', 'typescript.tsx'],
        \ 'root_uri':{server_info->lsp#utils#path_to_uri(lsp#utils#find_nearest_parent_file_directory(lsp#utils#get_buffer_path(), 'tsconfig.json'))},
        \ })
endif
'''

[[plugins]]
repo='prabirshrestha/asyncomplete.vim'

[[plugins]]
repo='prabirshrestha/asyncomplete-lsp.vim'

[[plugins]]
repo='prabirshrestha/asyncomplete-buffer.vim'
hook_add='''
au User asyncomplete_setup call asyncomplete#register_source(asyncomplete#sources#buffer#get_source_options({
    \ 'name': 'b',
    \ 'whitelist': ['*'],
    \ 'blacklist': ['typescript', 'typescript.tsx'],
    \ 'priority': 3,
    \ 'completor': function('asyncomplete#sources#buffer#completor'),
    \ }))
'''

[[plugins]]
repo='prabirshrestha/asyncomplete-file.vim'
hook_add='''
au User asyncomplete_setup call asyncomplete#register_source(asyncomplete#sources#file#get_source_options({
    \ 'name': 'f',
    \ 'whitelist': ['*'],
    \ 'priority': 5,
    \ 'completor': function('asyncomplete#sources#file#completor')
    \ }))
'''
